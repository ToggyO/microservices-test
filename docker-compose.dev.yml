version: '3.3'
services:
  microservices-auth-service-postgres-dev:
    container_name: auth-service-postgres-dev
    image: postgres:12.1
    restart: always
    environment:
      POSTGRES_USER: ${MIC_AUTH_POSTGRES_USER}
      POSTGRES_PASSWORD: ${MIC_AUTH_POSTGRES_PASSWORD}
      POSTGRES_DB: ${MIC_AUTH_POSTGRES_DATABASE}
    volumes:
      - 'auth-service-postgres-dev:/var/lib/postgresql/data'
    ports:
      - ${MIC_AUTH_POSTGRES_EXTERNAL_PORT}:${MIC_AUTH_POSTGRES_PORT}
    networks:
      - app-network

  microservices-auth-service-dev:
    container_name: auth-service-dev
    build: ./auth-service
    restart: always
    environment:
      NODE_ENV: ${NODE_ENV}
      HOST: ${HOST}
      PORT: ${PORT}
      API_VERSION: ${API_VERSION}
      AUTHORIZATION_HEADER: ${AUTHORIZATION_HEADER}
      CRON_CHECK_INVALID_TOKENS_DELAY_SECS: ${CRON_CHECK_INVALID_TOKENS_DELAY_SECS}
      CRYPTO_SECRET: ${CRYPTO_SECRET}
      JWT_SECRET: ${JWT_SECRET}
      JWT_ACCESS_EXPIRES_IN: ${JWT_ACCESS_EXPIRES_IN}
      JWT_REFRESH_EXPIRES_IN: ${JWT_REFRESH_EXPIRES_IN}
      JWT_PUBLIC_KEY_BASE64: ${JWT_PUBLIC_KEY_BASE64}
      PEPPER: ${PEPPER}
      MIC_AUTH_POSTGRES_HOST: ${MIC_AUTH_POSTGRES_HOST}
      MIC_AUTH_POSTGRES_PORT: ${MIC_AUTH_POSTGRES_PORT}
      MIC_AUTH_POSTGRES_EXTERNAL_PORT: ${MIC_AUTH_POSTGRES_EXTERNAL_PORT}
      MIC_AUTH_POSTGRES_USER: ${MIC_AUTH_POSTGRES_USER}
      MIC_AUTH_POSTGRES_DATABASE: ${MIC_AUTH_POSTGRES_DATABASE}
      MIC_AUTH_POSTGRES_PASSWORD: ${MIC_AUTH_POSTGRES_PASSWORD}
      TEMP_DIR: ${TEMP_DIR}
      UPLOAD_MAX_FILESIZE_MB: ${UPLOAD_MAX_FILESIZE_MB}
    ports:
      - ${PORT}:${PORT}
    volumes:
      - ../microservices-test-volumes/sequelize-test-logs:/usr/app/log
    links:
      - microservices-auth-service-postgres-dev
    depends_on:
      - microservices-auth-service-postgres-dev
    networks:
      - app-network

  microservices-nginx-dev:
    container_name: nginx-dev
    restart: always
    image: nginx:1.19.1
    ports:
      - 8080:80
    volumes:
      - ./default.conf:/etc/nginx/conf.d/default.conf
      - ./nginx_logs/:/var/log/nginx/
    networks:
      - app-network
    links:
      - microservices-auth-service-dev
    depends_on:
      - microservices-auth-service-dev

networks:
  app-network:
    driver: bridge

volumes:
  auth-service-postgres-dev:
